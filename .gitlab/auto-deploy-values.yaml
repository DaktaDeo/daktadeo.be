# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
# deploymentApiVersion: extensions/v1beta1
deploymentApiVersion: apps/v1
replicaCount: 1
image:
  repository: registry.gitlab.com/daktadeo/multipass/multipass-rocks/builder:latest
  tag: stable
  pullPolicy: Always
  secrets:
    - name: gitlab-registry
podAnnotations: {}
application:
  track: stable
  tier: web
  migrateCommand:
  initializeCommand:
  secretName:
  secretChecksum:
hpa:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
gitlab:
  app:
  env:
  envName:
  envURL:
service:
  enabled: true
  annotations: {}
  name: web
  type: ClusterIP
  url: http://my.host.com/
  additionalHosts:
  commonName:
  externalPort: 5000
  internalPort: 5000
ingress:
  tls:
    enabled: true
    secretName: ""
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"
  modSecurity:
    enabled: false
    secRuleEngine: "DetectionOnly"
prometheus:
  metrics: false
livenessProbe:
  path: "/sonoy"
  initialDelaySeconds: 60
  timeoutSeconds: 15
  scheme: "HTTP"
  probeType: "httpGet"
readinessProbe:
  path: "/sonoy"
  initialDelaySeconds: 60
  timeoutSeconds: 3
  scheme: "HTTP"
  probeType: "httpGet"
postgresql:
  enabled: false
  managed: false
  managedClassSelector:
  #   matchLabels:
  #     stack: gitlab (This is an example. The labels should match the labels on the CloudSQLInstanceClass)

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
#  memory: 128Mi

## Configure PodDisruptionBudget
## ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
#
podDisruptionBudget:
  enabled: false
  # minAvailable: 1
  maxUnavailable: 1

workers: {}
  # worker:
  #   replicaCount: 1
  #   terminationGracePeriodSeconds: 60
  #   command:
  #   - /bin/herokuish
  #   - procfile
  #   - start
  #   - worker
  #   preStopCommand:
  #   - /bin/herokuish
  #   - procfile
#   - start
#   - stop_worker
